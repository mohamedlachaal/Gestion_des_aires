// <auto-generated />
using System;
using Marhaba.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marhaba.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230517170050_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Marhaba.Models.Aire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VilleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VilleId");

                    b.ToTable("aires");
                });

            modelBuilder.Entity("Marhaba.Models.Passager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passagers");
                });

            modelBuilder.Entity("Marhaba.Models.Reservation", b =>
                {
                    b.Property<int>("AireId")
                        .HasColumnType("int");

                    b.Property<int>("PassagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("datetime2");

                    b.HasKey("AireId", "PassagerId");

                    b.HasIndex("PassagerId");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("Marhaba.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("villes");
                });

            modelBuilder.Entity("Marhaba.Models.Aire", b =>
                {
                    b.HasOne("Marhaba.Models.Ville", "ville")
                        .WithMany("aires")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ville");
                });

            modelBuilder.Entity("Marhaba.Models.Reservation", b =>
                {
                    b.HasOne("Marhaba.Models.Aire", "aire")
                        .WithMany("reservations")
                        .HasForeignKey("AireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marhaba.Models.Passager", "passager")
                        .WithMany("reservations")
                        .HasForeignKey("PassagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aire");

                    b.Navigation("passager");
                });

            modelBuilder.Entity("Marhaba.Models.Aire", b =>
                {
                    b.Navigation("reservations");
                });

            modelBuilder.Entity("Marhaba.Models.Passager", b =>
                {
                    b.Navigation("reservations");
                });

            modelBuilder.Entity("Marhaba.Models.Ville", b =>
                {
                    b.Navigation("aires");
                });
#pragma warning restore 612, 618
        }
    }
}
